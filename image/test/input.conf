<system>
  log_level trace
</system>

<source>
  @type tail
  path /workspace/test/logfmt.log
  tag logfmt
  read_from_head true
  <parse>
    @type logfmt
    strict true
  </parse>
</source>

<source>
  @type tail
  path /workspace/test/kube-*.log
  tag kubernetes
  format kubernetes
  read_from_head true
</source>

<source>
  @type tail
  path /workspace/test/json.log
  tag json
  format none
  read_from_head true
</source>

<filter json.**>
  @type parser
  key_name message
  emit_invalid_record_to_error false
  <parse>
    @type json
    time_format %FT%T%:z
  </parse>
</filter>


<source>
  @type tail
  path /workspace/test/extract.log
  tag extract
  format none
  read_from_head true
</source>


<filter extract>
  @type extract
  <rule>
    key message
    pattern /^.*(vmware-.*\.test\.io)\/hello-(?<target>db|mq|zk)(-.*)?\:(.*)$/
    set greeting_target
    to \k<target>-server
  </rule>
  <rule>
    key message
    pattern /^.*(vmware-.*\.test\.io)\/goodbye-(db|mq|zk)(-.*)?\:(.*)$/
    set farewell
    to \2-server
  </rule>
</filter>

<source>
  @type tail
  path /workspace/test/truncator.log
  tag kubeexample.namespace-123.pod-id-123.container-123*
  format none
  read_from_head true
</source>

<match kubeexample.**>
  #@type remote_syslog
  @type truncating_remote_syslog

  host "#{ENV['PAPERTRAIL_HOST']}"
  port "#{ENV['PAPERTRAIL_PORT']}"
  severity debug
  program truncated-tag
</match>

<source>
  @type tail
  path /var/log/containers/*.log
  tag kube.**
  format none
  read_from_head true
  <parse>
    @type multiline
    # cri-o
    format1 /^(?<partials>([^\n]+ (stdout|stderr) P [^\n]+\n)*)/
    format2 /(?<time>[^\n]+) (?<stream>stdout|stderr) F (?<log>[^\n]*)/
    # docker
    format3 /|^(?<json>{.*})/
    time_format %Y-%m-%dT%H:%M:%S.%N%:z
  </parse>
</source>


<filter kube.**>
  @type kubernetes_metadata
  watch false
  skip_master_url
  cache_size 10000
</filter>
