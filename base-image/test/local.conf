<system>
  log_level trace
</system>

<source>
  @type tail
  path /workspace/test/logfmt.log
  tag logfmt
  read_from_head true
  <parse>
    @type logfmt
    strict true
  </parse>
</source>

<source>
  @type tail
  path /workspace/test/kube-*.log
  tag kubernetes*
  format kubernetes
  read_from_head true
</source>

<source>
  @type tail
  path /workspace/test/json.log
  tag json
  format none
  read_from_head true
</source>

<filter json.**>
  @type parser
  key_name message
  emit_invalid_record_to_error false
  <parse>
    @type json
    time_format %FT%T%:z
  </parse>
</filter>


<source>
  @type tail
  path /workspace/test/extract.log
  tag extract
  format none
  read_from_head true
</source>


<filter extract>
  @type extract
  <rule>
    key message
    pattern /^.*(vmware-.*\.test\.io)\/hello-(?<target>db|mq|zk)(-.*)?\:(.*)$/
    set greeting_target
    to \k<target>-server
  </rule>
  <rule>
    key message
    pattern /^.*(vmware-.*\.test\.io)\/goodbye-(db|mq|zk)(-.*)?\:(.*)$/
    set farewell
    to \2-server
  </rule>
</filter>

<source>
  @type tail
  path /workspace/test/truncator.log
  tag kube.namespace-123.pod-id-asfsadfsafsdf.coadadadasntainer-asdfasfasdf*
  format none
  read_from_head true
</source>

<match kube.**>
  #@type remote_syslog
  @type truncating_remote_syslog

  host "#{ENV['PAPERTRAIL_HOST']}"
  port "#{ENV['PAPERTRAIL_PORT']}"
  severity debug
  program truncated-tag
</match>

<match nothing.really>
  @type logzio_buffered
  # no endpoint causes failure
  endpoint_url https://listener.logz.io:8071?token=<token>&type=<logtype>
  output_include_time true
  output_include_tags true
  buffer_type file
  buffer_path <pathtobuffer>
  flush_interval 10s
  buffer_chunk_limit 1m # Logz.io has bulk limit of 10M. We recommend set this to 1M, to avoid oversized bulks
</match>

<match **>
  @type stdout
</match>


<plugin hello>
  @type world
</plugin>

