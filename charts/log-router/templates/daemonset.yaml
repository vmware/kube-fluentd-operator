{{/*
Copyright Â© 2018 VMware, Inc. All Rights Reserved.
SPDX-License-Identifier: BSD-2-Clause
*/}}
{{- $root := . -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ template "fluentd-router.fullname" . }}
  labels:
    app: {{ template "fluentd-router.name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ template "fluentd-router.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "fluentd-router.name" . }}
        release: {{ .Release.Name }}
      annotations:
        checksum/fluentd-extraenv: {{ toYaml .Values.fluentd.extraEnv | sha256sum }}
        checksum/reloader-extraenv: {{ toYaml .Values.reloader.extraEnv | sha256sum }}
      {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
      {{- end }}
    spec:
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.image.pullSecret }}
      {{- end }}
      serviceAccountName: {{ if .Values.rbac.create }}{{ template "fluentd-router.fullname" . }}{{ else }}"{{ .Values.serviceAccountName }}"{{ end }}
      {{- if .Values.securityContext }}
      securityContext:
{{  toYaml .Values.securityContext | indent 8 }}
      {{ end }}
{{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
{{- end }}
      containers:
        - name: fluentd
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          env:
          - name: K8S_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        {{- range $key, $value := .Values.fluentd.extraEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ template "fluentd-router.fullname" $root }}
                key: fluentd.{{ $key }}
        {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.prometheusEnabled }}
          ports:
          - name: prometheus
            containerPort: 24231
          {{- end }}
          volumeMounts:
{{- include "node.fluendVolumeMounts" . | indent 10 }}
{{- if .Values.fluentd.extraVolumeMounts }}
{{ toYaml .Values.fluentd.extraVolumeMounts | indent 10 }}
{{- end }}
          resources:
{{ toYaml .Values.fluentd.resources | indent 12 }}
        - name: reloader
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.prometheusEnabled }}
          ports:
          - name: metrics
            containerPort: {{ default 9000 .Values.metricsPort }}
          {{- end }}
          {{- if .Values.reloader.extraEnv }}
          env:
        {{- range $key, $value := .Values.reloader.extraEnv }}
          - name: {{ $key }}
            valueFrom:
              secretKeyRef:
                name: {{ template "fluentd-router.fullname" $root }}
                key: reloader.{{ $key }}
        {{- end }}
          {{- end }}
          command:
          - {{ include "node.operatorBinary" . }}
          - --datasource={{ .Values.datasource }}
          {{- if .Values.crdMigrationMode }}
          - --crd-migration-mode
          {{- end }}
          - --default-configmap={{ .Values.defaultConfigmap }}
          - --interval={{ .Values.interval }}
          - --log-level={{ .Values.logLevel }}
          - --fluentd-loglevel={{ .Values.fluentdLogLevel }}
          {{- if not (empty .Values.bufferMountFolder) }}
          - --buffer-mount-folder={{ .Values.bufferMountFolder }}
          {{- end }}
          - --output-dir={{ include "node.fluentConfMountPath" . }}
          - --templates-dir={{ include "node.templatesDir" . }}
          - --id={{ template "fluentd-router.fullname" . }}
          - --fluentd-binary
          {{- if .Values.logRotate.enabled }}
          - {{ include "node.fluentdBinary" . }} --log-rotate-age {{  .Values.logRotate.logRotateAge  }} --log-rotate-size {{  .Values.logRotate.logRotateSize | int }}
          {{ else }}
          - {{ include "node.fluentdBinary" . }}
          {{ end }}
          - --kubelet-root
          - {{ include "node.kubeletRootPath" . }}
          {{- if .Values.meta.key }}
          - --meta-key={{ .Values.meta.key }}
          - --meta-values={{- range $k, $v := .Values.meta.values }}{{$k}}={{$v}},
          {{- end }}
          {{- end }}
          {{- if .Values.prometheusEnabled }}
          - --prometheus-enabled
          - --metrics-port={{ default 9000 .Values.metricsPort }}
          {{- end }}
          {{- if and (eq .Values.datasource "multimap") .Values.labelSelector.matchLabels }}
          - --label-selector={{- range $k, $v := .Values.labelSelector.matchLabels }}{{$k}}={{$v}},
          {{- end }}
          {{- end }}
          {{- range  .Values.namespaces }}
          - --namespaces
          - "{{ . }}"
          {{- end }}
          {{- if .Values.allowTagExpansion }}
          - --allow-tag-expansion
          {{- end }}
          {{- if .Values.adminNamespace }}
          - --admin-namespace={{ .Values.adminNamespace }}
          {{- end }}
          {{- if .Values.fluentdReloadPath }}
          - --fluentd-reload-path={{ .Values.fluentdReloadPath }}
          {{- end }}
          {{- if .Values.execTimeout }}
          - --exec-timeout={{ .Values.execTimeout }}
          {{- end }}
          {{- if .Values.statusAnnotation }}
          - --status-annotation={{ .Values.statusAnnotation }}
          {{- end }}
          {{- if .Values.configmapAnnotation }}
          - --annotation={{ .Values.configmapAnnotation }}
          {{- end }}
          {{ include "node.useSystemd" . | indent 10}}
          volumeMounts:
{{- include "node.operatorVolumeMounts" . | indent 10 }}
{{- if .Values.reloader.extraVolumeMounts }}
{{ toYaml .Values.reloader.extraVolumeMounts | indent 10 }}
{{- end }}
          resources:
{{ toYaml .Values.reloader.resources | indent 12 }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      {{- end}}
      volumes:
{{- include "node.volumes" . | indent 6 }}
{{- if .Values.extraVolumes }}
{{ toYaml .Values.extraVolumes | indent 6 }}
{{- end }}
  {{- if .Values.updateStrategy}}
  updateStrategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
  {{- end }}
