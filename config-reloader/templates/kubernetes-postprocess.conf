# Query the API for extra metadata.
<filter kubernetes.**>
  @type kubernetes_metadata
  # If the logs begin with '{' and end with '}' then it's JSON so merge
  # the JSON log field into the log event
  merge_json_log true
  preserve_json_log true
</filter>

# rewrite_tag_filter does not support nested fields like
# kubernetes.container_name, so this exists to flatten the fields
# so we can use them in our rewrite_tag_filter
<filter kubernetes.**>
  @type record_transformer
  enable_ruby true

  # use the format namespace.pod_name.container_name
  <record>
    kubernetes_namespace_container_name ${record["kubernetes"]["namespace_name"]}.${record["kubernetes"]["pod_name"]}.${record["kubernetes"]["container_name"]}
    container_info ${record["docker"]["container_id"]}-${record["stream"]}
  </record>
</filter>

# retag based on the namespace and container name of the log message
<match kubernetes.**>
  @type rewrite_tag_filter
  # Update the tag have a structure of kube.<namespace>.<containername>

  <rule>
    key      kubernetes_namespace_container_name
    pattern  ^(.+)$
    tag      kube.$1
  </rule>
</match>

# Delete useless information fetched from kubernetes
<filter kube.*.*.*>
  @type record_modifier
  remove_keys dummy_

  <record>
    dummy_ ${record["kubernetes"]&.delete("master_url"); record["kubernetes"]&.delete("namespace_id"); if record["kubernetes"]&.has_key?("labels"); record["kubernetes"]["labels"].delete("pod-template-generation"); record["kubernetes"]["labels"].delete("controller-revision-hash");  record["kubernetes"]["labels"].delete("pod-template-hash"); end; nil}
  </record>
</filter>

# Remove the unnecessary field as the information is already available on other fields.
<filter kube.*.*.*>
  @type record_transformer
  remove_keys kubernetes_namespace_container_name
</filter>

# Parse logs in the kube-system namespace using the kubernetes formatter.
<filter kube.kube-system.**>
  @type parser
  reserve_data true
  key_name log
  emit_invalid_record_to_error false
  <parse>
    @type kubernetes
    time_format %FT%T%:z
  </parse>
</filter>
